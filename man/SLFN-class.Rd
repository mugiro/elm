% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/SLFN-class.R, R/add_neurons.R, R/errors.R, R/predict.R, R/ranking.R, R/train.R, R/train_pruning.R
\docType{class}
\name{SLFN-class}
\alias{SLFN-class}
\alias{add_neurons,SLFN-method}
\alias{class_postprocess,SLFN-method}
\alias{get_error,SLFN-method}
\alias{mse,SLFN-method}
\alias{project,SLFN-method}
\alias{prune,SLFN-method}
\alias{rank_neurons,SLFN-method}
\alias{show,SLFN-method}
\alias{solve_system,SLFN-method}
\alias{train,SLFN-method}
\alias{train_pruning,SLFN-method}
\title{Class \code{"SLFN"}}
\usage{
\S4method{show}{SLFN}(object)

\S4method{add_neurons}{SLFN}(object, act_fun, nn, w_in = NULL, b = NULL)

\S4method{get_error}{SLFN}(object, n_sel, h, y, h_val = NULL, y_val = NULL,
  cv_rows = NULL)

\S4method{mse}{SLFN}(object, y, yp, x)

\S4method{class_postprocess}{SLFN}(object, yp, class_output, ml_threshold)

\S4method{rank_neurons}{SLFN}(object, nn_max, h = NULL, y = NULL)

\S4method{train}{SLFN}(object, x, y, x_val = NULL, y_val = NULL,
  type = "reg", tune = "none", ranking = "random", validation = "none",
  folds = 10, class_weights = NULL, ...)

\S4method{project}{SLFN}(object, x, rbf_dist = "euclidean")

\S4method{solve_system}{SLFN}(object, h, y, solve = TRUE)

\S4method{train_pruning}{SLFN}(object, h, y, h_val = NULL, y_val = NULL,
  cv_rows = NULL)

\S4method{prune}{SLFN}(object, n_sel)
}
\arguments{
\item{object}{The SLFN object to be displayed.}
}
\description{
A S4 class to represent a Single-hidden Layer Feed-forward Network (SLFN)

Display a SLFN object.
}
\details{
Include here more details <<<<<<ANDRES<<<<<<
}
\section{Methods (by generic)}{
\itemize{
\item \code{show}: show an object of class \code{SLFN}

\item \code{add_neurons}: add neurons of the same type of activation function to the hidden layer

\item \code{get_error}: implement a validation procedure

\item \code{mse}: MSE error

\item \code{class_postprocess}: 

\item \code{rank_neurons}: rank neurons of a SLFN

\item \code{train}: train the SLFN

\item \code{project}: project form input-space to neuron-space. Compute H

\item \code{solve_system}: solve linear system H x Wout = Y

\item \code{train_pruning}: optimization algorithm for obtaining the optimial number of neurons for pruning

\item \code{prune}: prune a SLFN
}}
\section{Slots}{

\describe{
\item{\code{inputs}}{The number of input features.}

\item{\code{outputs}}{The number of outputs.}

\item{\code{h_neurons}}{An object of classs hiddenlayer}

\item{\code{w_out}}{The weight output vector that includes the computed weights between
the hidden and the output layer.
      output weights - vector (1 output) / matrix (n outputs)}

\item{\code{results}}{The error used to evaluate model performance.
mse c(mse_train, mse_val)}

\item{\code{ridge}}{The regularization parameter used to include the L2 penalty the}

\item{\code{type}}{The type of model implemented:
\itemize{
\item "reg": regression problem.
\item "class_mc": multi-class: the sample belongs to 1 class out of n.
\item "class_ml": multi-label: the sample can belong to m classes out of n (m<n).
\item "class_w":  weigted classification
}}

\item{\code{tune}}{Parameter to define the model structure selection method implemented to tune
the model hyper-parameters
#' \itemize{
\item "none": no model selection
\item "pruning": pruning of neurons of the hidden layer: P-ELM, if "ridge = 0 &
ranking = "random", OP-ELM, if "ridge = 0 & ranking = lars", TROP-ELM, if ("ridge != 0 &
ranking = lars)
}}

\item{\code{ranking}}{A character to select the type of ranking implemented when prunning option
is selected.
\itemize{
\item "random" - random ranking
\item "lars" - ranking based on lars - L1 penalty
}}

\item{\code{nnRank}}{An integer that defines teh maximum number of neurons in ranking}

\item{\code{validation}}{The validation procedure used for developing the model.
#' \itemize{
\item "none" - no validation process  <<<<<<ANDRES<<<<<<
\item "v" - validation. Xv and Yv are required
\item "cv" - cross validation. The number of folds is required
\item "loo" - leave one out based on the PRESS statistic
}}

\item{\code{folds}}{The number number of folds for the cross-validation procedure.}

\item{\code{class_weights}}{numeric vector of length = number_of_classes with the weigths for weighted type}

\item{\code{batch}}{The size of the bacth in an adaptative ELM.}

\item{\code{time_exec}}{The time of calculation for training the model.}

\item{\code{bigdata}}{An logical parameter to select the kind of acceleration used in
case of solving big data problems.}
}}
\keyword{classes}

