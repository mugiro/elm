% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/SLFNclass.R, R/addNeurons.R, R/errors.R, R/predict.R, R/pruning.R, R/ranking.R, R/train.R
\docType{class}
\name{SLFN-class}
\alias{SLFN-class}
\alias{addNeurons,SLFN-method}
\alias{computeError,SLFN-method}
\alias{mse,SLFN-method}
\alias{postprocess,SLFN-method}
\alias{project,SLFN-method}
\alias{prune,SLFN-method}
\alias{rankNeurons,SLFN-method}
\alias{solveSystem,SLFN-method}
\alias{train,SLFN-method}
\alias{trainPruning,SLFN-method}
\title{Class \code{"SLFN"}}
\usage{
\S4method{addNeurons}{SLFN}(object, type, number, W = NULL, B = NULL, ...)

\S4method{computeError}{SLFN}(object, nSelected, H, Y, Hv = NULL, Yv = NULL,
  index = NULL)

\S4method{mse}{SLFN}(object, Y, Yp, X)

\S4method{postprocess}{SLFN}(object, Yp, typePred, ml_threshold)

\S4method{trainPruning}{SLFN}(object, H, Y, Hv = NULL, Yv = NULL,
  index = NULL)

\S4method{prune}{SLFN}(object, nSelected)

\S4method{rankNeurons}{SLFN}(object, nn, H = NULL, Y = NULL)

\S4method{train}{SLFN}(object, X, Y, Xv = NULL, Yv = NULL,
  modelStrSel = "none", ranking = "random", validation = "none",
  folds = 10, classification = "none", weights_wc = NULL, ...)

\S4method{project}{SLFN}(object, X, typeDist)

\S4method{solveSystem}{SLFN}(object, H, Y, getWout = TRUE)
}
\description{
A class for defining a Single-hidden Layer Feed-forward Network (SLFN)
}
\details{
Include here more details <<<<<<ANDRES<<<<<<
}
\section{Methods (by generic)}{
\itemize{
\item \code{addNeurons}: add neurons of the same type of activation function to the hidden layer

\item \code{computeError}: implement a validation procedure

\item \code{mse}: MSE error

\item \code{postprocess}: 

\item \code{trainPruning}: optimization algorithm for obtaining the optimial number of neurons for pruning

\item \code{prune}: prune a SLFN

\item \code{rankNeurons}: rank neurons of a SLFN

\item \code{train}: train the SLFN

\item \code{project}: project form input-space to neuron-space. Compute H

\item \code{solveSystem}: solve linear system H x Wout = Y
}}
\section{Slots}{

\describe{
\item{\code{inputs}}{The number of input features.}

\item{\code{outputs}}{The number of outputs.}

\item{\code{neurons}}{A list with the description of thehidden layer. The hidden layer
can be composed by neurons with different activation functions. Each element
of the list includes neurons with the same activation function. The element
is labelled with the type of activation function and contains the following
information: number of neurons (number), input weight vector (W) and biases
(B) associated to all the neurons included.}

\item{\code{Wout}}{The weight output vector that includes the computed weights between
the hidden and the output layer.
      output weights - vector (1 output) / matrix (n outputs)}

\item{\code{err}}{The error used to evaluate model performance.
mse c(mse_train, mse_val)}

\item{\code{alpha}}{The regularization parameter of the network.
normalization H'H solution (ridge parameter)}

\item{\code{modelStrSel}}{A character to define the selection of model's structure.
#' \itemize{
\item "none"
\item "pruning"
}}

\item{\code{ranking}}{A character to select the type of ranking implemented when
 prunning option is selected.
\itemize{
\item "random" - random ranking
\item "lars" - ranking based on lars - L1 penalty
}}

\item{\code{nnRank}}{An integer that defines teh maximum number of neurons in ranking}

\item{\code{validation}}{The validation procedure used for developing the model.
#' \itemize{
\item "none" - no validation process  <<<<<<ANDRES<<<<<<
\item "V" - validation. Xv and Yv are required
\item "CV" - cross validation. The number of folds is required
\item "LOO" - leave one out based on the PRESS statistic
}}

\item{\code{folds}}{The number number of folds for the cross-validation procedure.}

\item{\code{classification}}{The type of classification required:
\itemize{
\item "none": regression problem.
\item "sc": single class: binary classification problem.
\item "mc": multi-class: the sample belongs to 1 class out of n.
\item "ml": multi-label: the sample can belong to m classes out of n (m<n).
\item "w":  weigted.
}}

\item{\code{weights_wc}}{numeric vector of length = number_of_classes with the weigths for weighted classification}

\item{\code{batch}}{The size of the bacth in an adaptative ELM.}

\item{\code{modelTime}}{The time of calculation for training the model.}

\item{\code{bigdata}}{An logical parameter to select the kind of acceleration used in
case of solving big data problems.}
}}
\keyword{classes}

